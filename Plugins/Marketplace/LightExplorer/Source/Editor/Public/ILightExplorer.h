/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////
///			Copyright 2020 (C) Bruno Xavier B. Leite
//////////////////////////////////////////////////////////////

#pragma once

#include "LightExplorer.h"
#include "LE_MainWidget.h"

#include "Framework/MultiBox/MultiBoxBuilder.h"
#include "Framework/MultiBox/MultiBoxExtender.h"

#include "Runtime/Core/Public/Modules/ModuleManager.h"
#include "Runtime/Slate/Public/Widgets/Docking/SDockTab.h"

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class ILightExplorer : public IModuleInterface {
public:
	static inline ILightExplorer &Get() {
		return FModuleManager::LoadModuleChecked<ILightExplorer>("LightExplorer");
	}///
	//
	static inline bool IsAvailable() {
		return FModuleManager::Get().IsModuleLoaded("LightExplorer");
	}///
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define LOCTEXT_NAMESPACE "Synaptech"

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static const FName TAB("TAB_LightExplorer");

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class FLightExplorer : public ILightExplorer {
private:
	TSharedPtr<FExtender>LE_Extender; 
	TSharedPtr<FUICommandList>Commands;
	//
	TSharedRef<SDockTab>OnSpawnLightExplorerTab(const FSpawnTabArgs &SpawnTabArgs);
	//
	void AddToolBarButton(FToolBarBuilder &Builder);
public:
	static void ExtendMenu(FMenuBuilder &MenuBuilder);
	static void InvokeTab();
	//
	virtual void StartupModule() override;
	virtual void ShutdownModule() override;
	//
	void OnToolbarButtonClicked();
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class FLE_Command : public TCommands<FLE_Command> {
public:
	TSharedPtr<FUICommandInfo>LightExplorerTab;
	FLE_Command():TCommands<FLE_Command>(TEXT("LightExplorer"),NSLOCTEXT("Contexts","LightExplorer","Light Explorer"),NAME_None,FLE_EditorStyle::GetStyleSetName()){}
	//
	virtual void RegisterCommands() override;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#undef LOCTEXT_NAMESPACE

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////